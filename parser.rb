#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.8
# from Racc grammer file "".
#

require 'racc/parser.rb'

  require "lexer"
  require "nodes"

class Parser < Racc::Parser

module_eval(<<'...end grammar.y/module_eval...', 'grammar.y', 172)
  def parse(code, show_tokens=false)
    @tokens = Lexer.new.run(code)
    p @tokens if show_tokens
    do_parse
  end
  
  def next_token
    @tokens.shift
  end
...end grammar.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    23,    24,     5,    16,    17,    18,    19,    20,    21,    25,
    23,    24,    22,    16,    17,    18,    19,    20,    21,    25,
    69,    28,    22,    39,    40,    37,    38,     6,    15,    65,
    44,    28,    43,    43,     5,     5,    28,    28,    15,    23,
    24,     5,    16,    17,    18,    19,    20,    21,    25,    23,
    24,    22,    16,    17,    18,    19,    20,    21,    25,     6,
     6,    22,    28,    50,    39,    40,     6,    15,    28,    48,
    39,    40,    37,    38,    77,    23,    24,    15,    16,    17,
    18,    19,    20,    21,    25,    23,    24,    22,    16,    17,
    18,    19,    20,    21,    25,    75,    28,    22,    39,    40,
    37,    38,    28,    15,    39,    40,    37,    38,    47,    46,
    83,    23,    24,    15,    16,    17,    18,    19,    20,    21,
    25,    23,    24,    22,    16,    17,    18,    19,    20,    21,
    25,    26,    28,    22,    39,    40,    84,    85,    28,    15,
    39,    40,    37,    38,    33,    34,    35,    36,   nil,    15,
    23,    24,     5,    16,    17,    18,    19,    20,    21,    25,
    23,    24,    22,    16,    17,    18,    19,    20,    21,    25,
    73,    82,    22,    72,    81,   nil,   nil,     6,    15,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    23,    24,    15,    16,
    17,    18,    19,    20,    21,    25,   nil,   nil,    22,    23,
    24,     5,    16,    17,    18,    19,    20,    21,    25,   nil,
   nil,    22,    23,    24,    15,    16,    17,    18,    19,    20,
    21,    25,   nil,   nil,    22,   nil,     6,    15,   nil,    23,
    24,   nil,    16,    17,    18,    19,    20,    21,    25,   nil,
    15,    22,    23,    24,   nil,    16,    17,    18,    19,    20,
    21,    25,   nil,   nil,    22,    23,    24,    15,    16,    17,
    18,    19,    20,    21,    25,   nil,   nil,    22,    23,    24,
    15,    16,    17,    18,    19,    20,    21,    25,   nil,   nil,
    22,    23,    24,    15,    16,    17,    18,    19,    20,    21,
    25,   nil,   nil,    22,    23,    24,    15,    16,    17,    18,
    19,    20,    21,    25,   nil,   nil,    22,    23,    24,    15,
    16,    17,    18,    19,    20,    21,    25,   nil,   nil,    22,
    23,    24,    15,    16,    17,    18,    19,    20,    21,    25,
   nil,   nil,    22,   nil,    28,    15,    39,    40,    37,    38,
    33,    34,    35,    36,    31,    32,    30,    29,    15,   nil,
   nil,    28,    63,    39,    40,    37,    38,    33,    34,    35,
    36,    31,    32,    30,    29,    28,   nil,    39,    40,    37,
    38,    33,    34,    35,    36,    31,    32,    30,    29,    28,
   nil,    39,    40,    37,    38,    33,    34,    35,    36,    31,
    32,    30,    29,    28,   nil,    39,    40,    37,    38,    33,
    34,    35,    36,    31,    32,    30,    29,    28,   nil,    39,
    40,    37,    38,    33,    34,    35,    36,    31,    32,    30,
    29,    28,   nil,    39,    40,    37,    38,    33,    34,    35,
    36,    31,    32,    30,    28,   nil,    39,    40,    37,    38,
    33,    34,    35,    36,    31,    32,    28,   nil,    39,    40,
    37,    38,    33,    34,    35,    36 ]

racc_action_check = [
    43,    43,     3,    43,    43,    43,    43,    43,    43,    43,
    27,    27,    43,    27,    27,    27,    27,    27,    27,    27,
    46,    57,    27,    57,    57,    57,    57,     3,    43,    43,
    21,    61,    50,    21,    47,    68,    62,    45,    27,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    40,
    40,     0,    40,    40,    40,    40,    40,    40,    40,    47,
    68,    40,    59,    28,    59,    59,     0,     0,    55,    26,
    55,    55,    55,    55,    69,    15,    15,    40,    15,    15,
    15,    15,    15,    15,    15,    37,    37,    15,    37,    37,
    37,    37,    37,    37,    37,    69,    56,    37,    56,    56,
    56,    56,    58,    15,    58,    58,    58,    58,    24,    23,
    78,    22,    22,    37,    22,    22,    22,    22,    22,    22,
    22,    38,    38,    22,    38,    38,    38,    38,    38,    38,
    38,     1,    60,    38,    60,    60,    80,    82,    54,    22,
    54,    54,    54,    54,    54,    54,    54,    54,   nil,    38,
    74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
    73,    73,    74,    73,    73,    73,    73,    73,    73,    73,
    66,    76,    73,    66,    76,   nil,   nil,    74,    74,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    44,    44,    73,    44,
    44,    44,    44,    44,    44,    44,   nil,   nil,    44,    70,
    70,    70,    70,    70,    70,    70,    70,    70,    70,   nil,
   nil,    70,    29,    29,    44,    29,    29,    29,    29,    29,
    29,    29,   nil,   nil,    29,   nil,    70,    70,   nil,    30,
    30,   nil,    30,    30,    30,    30,    30,    30,    30,   nil,
    29,    30,    31,    31,   nil,    31,    31,    31,    31,    31,
    31,    31,   nil,   nil,    31,    32,    32,    30,    32,    32,
    32,    32,    32,    32,    32,   nil,   nil,    32,    33,    33,
    31,    33,    33,    33,    33,    33,    33,    33,   nil,   nil,
    33,    34,    34,    32,    34,    34,    34,    34,    34,    34,
    34,   nil,   nil,    34,    35,    35,    33,    35,    35,    35,
    35,    35,    35,    35,   nil,   nil,    35,    36,    36,    34,
    36,    36,    36,    36,    36,    36,    36,   nil,   nil,    36,
    39,    39,    35,    39,    39,    39,    39,    39,    39,    39,
   nil,   nil,    39,   nil,    41,    36,    41,    41,    41,    41,
    41,    41,    41,    41,    41,    41,    41,    41,    39,   nil,
   nil,    79,    41,    79,    79,    79,    79,    79,    79,    79,
    79,    79,    79,    79,    79,    64,   nil,    64,    64,    64,
    64,    64,    64,    64,    64,    64,    64,    64,    64,     4,
   nil,     4,     4,     4,     4,     4,     4,     4,     4,     4,
     4,     4,     4,    67,   nil,    67,    67,    67,    67,    67,
    67,    67,    67,    67,    67,    67,    67,    49,   nil,    49,
    49,    49,    49,    49,    49,    49,    49,    49,    49,    49,
    49,    51,   nil,    51,    51,    51,    51,    51,    51,    51,
    51,    51,    51,    51,    52,   nil,    52,    52,    52,    52,
    52,    52,    52,    52,    52,    52,    53,   nil,    53,    53,
    53,    53,    53,    53,    53,    53 ]

racc_action_pointer = [
    35,   131,   nil,    -4,   364,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    71,   nil,   nil,   nil,   nil,
   nil,     1,   107,    97,    95,   nil,    69,     6,    51,   208,
   225,   238,   251,   264,   277,   290,   303,    81,   117,   316,
    45,   319,   nil,    -4,   182,    22,   -12,    28,   nil,   392,
     0,   406,   419,   431,   123,    53,    81,     6,    87,    47,
   117,    16,    21,   nil,   350,   nil,   140,   378,    29,    62,
   195,   nil,   nil,   156,   146,   nil,   141,   nil,    96,   336,
   122,   nil,   125,   nil,   nil,   nil ]

racc_action_default = [
    -1,   -53,    -2,    -3,    -4,    -7,    -8,    -9,   -10,   -11,
   -12,   -13,   -14,   -15,   -16,   -53,   -18,   -19,   -20,   -21,
   -22,   -43,   -53,   -53,   -53,   -52,   -53,    -6,   -53,   -53,
   -53,   -53,   -53,   -53,   -53,   -53,   -53,   -53,   -53,   -53,
   -53,   -53,   -23,   -53,   -53,   -42,   -46,   -53,    86,    -5,
   -25,   -30,   -31,   -32,   -33,   -34,   -35,   -36,   -37,   -38,
   -39,   -40,   -41,   -17,   -28,   -26,   -53,   -44,   -53,   -53,
    -1,   -24,   -27,   -53,    -1,   -47,   -53,   -49,   -53,   -29,
   -53,   -48,   -53,   -51,   -45,   -50 ]

racc_goto_table = [
     1,    27,    41,    42,    66,    68,    76,   nil,   nil,    45,
   nil,   nil,   nil,   nil,    49,   nil,    51,    52,    53,    54,
    55,    56,    57,    58,    59,    60,    61,    62,   nil,   nil,
    64,    67,    71,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    70,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    79,   nil,   nil,   nil,   nil,   nil,    74,   nil,   nil,   nil,
    78,   nil,   nil,   nil,    80 ]

racc_goto_check = [
     1,     2,     4,    13,    14,    15,    16,   nil,   nil,     4,
   nil,   nil,   nil,   nil,     4,   nil,     4,     4,     4,     4,
     4,     4,     4,     4,     4,     4,     4,     4,   nil,   nil,
     4,     4,    13,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     2,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     4,   nil,   nil,   nil,   nil,   nil,     2,   nil,   nil,   nil,
     1,   nil,   nil,   nil,     1 ]

racc_goto_pointer = [
   nil,     0,    -2,   nil,   -13,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   -18,   -39,   -41,   -63 ]

racc_goto_default = [
   nil,   nil,     2,     3,     4,     7,     8,     9,    10,    11,
    12,    13,    14,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 35, :_reduce_1,
  1, 35, :_reduce_2,
  1, 35, :_reduce_3,
  1, 37, :_reduce_4,
  3, 37, :_reduce_5,
  2, 37, :_reduce_6,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  3, 38, :_reduce_17,
  1, 39, :_reduce_18,
  1, 39, :_reduce_19,
  1, 39, :_reduce_20,
  1, 39, :_reduce_21,
  1, 39, :_reduce_22,
  2, 40, :_reduce_23,
  4, 40, :_reduce_24,
  3, 40, :_reduce_25,
  2, 47, :_reduce_26,
  3, 47, :_reduce_27,
  1, 48, :_reduce_28,
  3, 48, :_reduce_29,
  3, 41, :_reduce_30,
  3, 41, :_reduce_31,
  3, 41, :_reduce_32,
  3, 41, :_reduce_33,
  3, 41, :_reduce_34,
  3, 41, :_reduce_35,
  3, 41, :_reduce_36,
  3, 41, :_reduce_37,
  3, 41, :_reduce_38,
  3, 41, :_reduce_39,
  3, 41, :_reduce_40,
  3, 41, :_reduce_41,
  2, 41, :_reduce_42,
  1, 43, :_reduce_43,
  3, 44, :_reduce_44,
  6, 45, :_reduce_45,
  0, 49, :_reduce_46,
  2, 49, :_reduce_47,
  3, 49, :_reduce_48,
  1, 50, :_reduce_49,
  3, 50, :_reduce_50,
  5, 46, :_reduce_51,
  1, 42, :_reduce_52 ]

racc_reduce_n = 53

racc_shift_n = 86

racc_token_table = {
  false => 0,
  :error => 1,
  :IF => 2,
  :ELSE => 3,
  :DEF => 4,
  :CLASS => 5,
  :NEWLINE => 6,
  :NUMBER => 7,
  :STRING => 8,
  :TRUE => 9,
  :FALSE => 10,
  :NIL => 11,
  :IDENTIFIER => 12,
  :CONSTANT => 13,
  :END => 14,
  "." => 15,
  "!" => 16,
  "*" => 17,
  "/" => 18,
  "+" => 19,
  "-" => 20,
  ">" => 21,
  ">=" => 22,
  "<" => 23,
  "<=" => 24,
  "==" => 25,
  "!=" => 26,
  "&&" => 27,
  "||" => 28,
  "=" => 29,
  "," => 30,
  ";" => 31,
  "(" => 32,
  ")" => 33 }

racc_nt_base = 34

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IF",
  "ELSE",
  "DEF",
  "CLASS",
  "NEWLINE",
  "NUMBER",
  "STRING",
  "TRUE",
  "FALSE",
  "NIL",
  "IDENTIFIER",
  "CONSTANT",
  "END",
  "\".\"",
  "\"!\"",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "\">\"",
  "\">=\"",
  "\"<\"",
  "\"<=\"",
  "\"==\"",
  "\"!=\"",
  "\"&&\"",
  "\"||\"",
  "\"=\"",
  "\",\"",
  "\";\"",
  "\"(\"",
  "\")\"",
  "$start",
  "Expressions",
  "Terminator",
  "ExpressionList",
  "Expression",
  "Literal",
  "Call",
  "Operator",
  "GetConstant",
  "GetLocal",
  "SetLocal",
  "Def",
  "Class",
  "Arguments",
  "ArgList",
  "Parameters",
  "ParamList" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'grammar.y', 46)
  def _reduce_1(val, _values, result)
     result = Nodes.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 47)
  def _reduce_2(val, _values, result)
     result = Nodes.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 48)
  def _reduce_3(val, _values, result)
     result = Nodes.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 52)
  def _reduce_4(val, _values, result)
     result = [ val[0] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 53)
  def _reduce_5(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 55)
  def _reduce_6(val, _values, result)
     result = val[0] 
    result
  end
.,.,

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

module_eval(<<'.,.,', 'grammar.y', 74)
  def _reduce_17(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 79)
  def _reduce_18(val, _values, result)
     result = NumberNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 80)
  def _reduce_19(val, _values, result)
     result = StringNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 81)
  def _reduce_20(val, _values, result)
     result = TrueNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 82)
  def _reduce_21(val, _values, result)
     result = FalseNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 83)
  def _reduce_22(val, _values, result)
     result = NilNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 89)
  def _reduce_23(val, _values, result)
     result = CallNode.new(nil, val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 92)
  def _reduce_24(val, _values, result)
     result = CallNode.new(val[0], val[2], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 94)
  def _reduce_25(val, _values, result)
     result = CallNode.new(val[0], val[2], []) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 98)
  def _reduce_26(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 99)
  def _reduce_27(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 103)
  def _reduce_28(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 104)
  def _reduce_29(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 109)
  def _reduce_30(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 110)
  def _reduce_31(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 111)
  def _reduce_32(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 112)
  def _reduce_33(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 113)
  def _reduce_34(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 114)
  def _reduce_35(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 115)
  def _reduce_36(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 116)
  def _reduce_37(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 119)
  def _reduce_38(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 120)
  def _reduce_39(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 121)
  def _reduce_40(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 122)
  def _reduce_41(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 124)
  def _reduce_42(val, _values, result)
     result = CallNode.new(val[1], val[0], []) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 129)
  def _reduce_43(val, _values, result)
     result = GetLocalNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 132)
  def _reduce_44(val, _values, result)
     result = SetLocalNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 139)
  def _reduce_45(val, _values, result)
     result = DefNode.new(val[1], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 143)
  def _reduce_46(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 144)
  def _reduce_47(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 145)
  def _reduce_48(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 149)
  def _reduce_49(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 150)
  def _reduce_50(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 157)
  def _reduce_51(val, _values, result)
     result = ClassNode.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 162)
  def _reduce_52(val, _values, result)
     result = GetConstantNode.new(val[0]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
