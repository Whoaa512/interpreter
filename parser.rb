#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.8
# from Racc grammer file "".
#

require 'racc/parser.rb'

  require "lexer"
  require "nodes"

class Parser < Racc::Parser

module_eval(<<'...end grammar.y/module_eval...', 'grammar.y', 200)
  def parse(code, show_tokens=false)
    @tokens = Lexer.new.run(code)
    p @tokens if show_tokens
    do_parse
  end
  
  def next_token
    @tokens.shift
  end
...end grammar.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    29,    98,    26,    27,    78,    19,    20,    21,    22,    23,
    24,    28,    97,    30,    31,    29,    25,    26,    27,    34,
    19,    20,    21,    22,    23,    24,    28,     5,    30,    31,
     5,    25,    18,    74,     5,    29,     5,    26,    27,     5,
    19,    20,    21,    22,    23,    24,    28,    18,    30,    31,
    50,    25,    84,    49,     6,    83,    34,     6,    45,    46,
    88,     6,    34,     6,    45,    46,     6,    18,    29,    59,
    26,    27,     5,    19,    20,    21,    22,    23,    24,    28,
    57,    30,    31,    86,    25,    34,    53,    45,    46,    43,
    44,    39,    40,    41,    42,    37,    38,    36,    35,     6,
    18,    29,    95,    26,    27,    94,    19,    20,    21,    22,
    23,    24,    28,    49,    30,    31,    29,    25,    26,    27,
    96,    19,    20,    21,    22,    23,    24,    28,    34,    30,
    31,    99,    25,    18,    52,   100,    29,   101,    26,    27,
    34,    19,    20,    21,    22,    23,    24,    28,    18,    30,
    31,    29,    25,    26,    27,     5,    19,    20,    21,    22,
    23,    24,    28,    32,    30,    31,   104,    25,    18,    34,
   nil,    45,    46,    43,    44,    39,    40,    41,    42,    37,
    38,    36,     6,    18,    29,   nil,    26,    27,     5,    19,
    20,    21,    22,    23,    24,    28,   nil,    30,    31,    34,
    25,    45,    46,    43,    44,    39,    40,    41,    42,    37,
    38,    36,    35,   nil,   nil,     6,    18,    29,   nil,    26,
    27,   nil,    19,    20,    21,    22,    23,    24,    28,   nil,
    30,    31,    29,    25,    26,    27,   nil,    19,    20,    21,
    22,    23,    24,    28,   nil,    30,    31,   nil,    25,    18,
   nil,   nil,    29,   nil,    26,    27,   nil,    19,    20,    21,
    22,    23,    24,    28,    18,    30,    31,    29,    25,    26,
    27,   nil,    19,    20,    21,    22,    23,    24,    28,   nil,
    30,    31,   nil,    25,    18,   nil,   nil,    29,   nil,    26,
    27,     5,    19,    20,    21,    22,    23,    24,    28,    18,
    30,    31,    34,    25,    45,    46,    43,    44,    39,    40,
    41,    42,    37,    38,    36,    35,   nil,   nil,     6,    18,
    29,   nil,    26,    27,     5,    19,    20,    21,    22,    23,
    24,    28,   nil,    30,    31,    34,    25,    45,    46,    43,
    44,    39,    40,    41,    42,    37,    38,    36,    35,   nil,
   nil,     6,    18,    29,   nil,    26,    27,   nil,    19,    20,
    21,    22,    23,    24,    28,   nil,    30,    31,    29,    25,
    26,    27,   nil,    19,    20,    21,    22,    23,    24,    28,
   nil,    30,    31,   nil,    25,    18,   nil,   nil,    29,   nil,
    26,    27,   nil,    19,    20,    21,    22,    23,    24,    28,
    18,    30,    31,    29,    25,    26,    27,   nil,    19,    20,
    21,    22,    23,    24,    28,   nil,    30,    31,   nil,    25,
    18,   nil,   nil,    29,   nil,    26,    27,   nil,    19,    20,
    21,    22,    23,    24,    28,    18,    30,    31,    29,    25,
    26,    27,   nil,    19,    20,    21,    22,    23,    24,    28,
   nil,    30,    31,   nil,    25,    18,   nil,   nil,    29,   nil,
    26,    27,   nil,    19,    20,    21,    22,    23,    24,    28,
    18,    30,    31,    29,    25,    26,    27,   nil,    19,    20,
    21,    22,    23,    24,    28,   nil,    30,    31,   nil,    25,
    18,   nil,   nil,    29,   nil,    26,    27,   nil,    19,    20,
    21,    22,    23,    24,    28,    18,    30,    31,    29,    25,
    26,    27,   nil,    19,    20,    21,    22,    23,    24,    28,
   nil,    30,    31,   nil,    25,    18,   nil,   nil,    29,   nil,
    26,    27,   nil,    19,    20,    21,    22,    23,    24,    28,
    18,    30,    31,    29,    25,    26,    27,   nil,    19,    20,
    21,    22,    23,    24,    28,   nil,    30,    31,   nil,    25,
    18,   nil,    34,     5,    45,    46,    43,    44,    39,    40,
    41,    42,    37,    38,    34,    18,    45,    46,    43,    44,
    39,    40,    41,    42,    37,    38,    36,    35,     5,    34,
     6,    45,    46,    43,    44,    39,    40,    41,    42,    34,
   nil,    45,    46,    43,    44,    39,    40,    41,    42,    37,
    38,    36,    35,   nil,    34,     6,    45,    46,    43,    44,
    39,    40,    41,    42,    37,    38,    36,    35,   nil,   nil,
   nil,    34,    72,    45,    46,    43,    44,    39,    40,    41,
    42,    37,    38,    36,    35,    34,   nil,    45,    46,    43,
    44,    39,    40,    41,    42,    37,    38,    36,    35,    34,
   nil,    45,    46,    43,    44,    39,    40,    41,    42,    34,
   nil,    45,    46,    43,    44,    34,   nil,    45,    46,    43,
    44,    34,   nil,    45,    46,    43,    44,    34,   nil,    45,
    46,    43,    44 ]

racc_action_check = [
    49,    90,    49,    49,    52,    49,    49,    49,    49,    49,
    49,    49,    90,    49,    49,    33,    49,    33,    33,    51,
    33,    33,    33,    33,    33,    33,    33,    77,    33,    33,
    98,    33,    49,    49,    53,    79,     3,    79,    79,    79,
    79,    79,    79,    79,    79,    79,    79,    33,    79,    79,
    24,    79,    75,    24,    77,    75,    69,    98,    69,    69,
    78,    53,    68,     3,    68,    68,    79,    79,    80,    34,
    80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
    32,    80,    80,    78,    80,    56,    27,    56,    56,    56,
    56,    56,    56,    56,    56,    56,    56,    56,    56,    80,
    80,    18,    87,    18,    18,    87,    18,    18,    18,    18,
    18,    18,    18,    59,    18,    18,    50,    18,    50,    50,
    89,    50,    50,    50,    50,    50,    50,    50,    71,    50,
    50,    91,    50,    18,    26,    93,    25,    95,    25,    25,
    70,    25,    25,    25,    25,    25,    25,    25,    50,    25,
    25,     0,    25,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     1,     0,     0,   103,     0,    25,    60,
   nil,    60,    60,    60,    60,    60,    60,    60,    60,    60,
    60,    60,     0,     0,    85,   nil,    85,    85,    85,    85,
    85,    85,    85,    85,    85,    85,   nil,    85,    85,    58,
    85,    58,    58,    58,    58,    58,    58,    58,    58,    58,
    58,    58,    58,   nil,   nil,    85,    85,    29,   nil,    29,
    29,   nil,    29,    29,    29,    29,    29,    29,    29,   nil,
    29,    29,    30,    29,    30,    30,   nil,    30,    30,    30,
    30,    30,    30,    30,   nil,    30,    30,   nil,    30,    29,
   nil,   nil,    31,   nil,    31,    31,   nil,    31,    31,    31,
    31,    31,    31,    31,    30,    31,    31,    84,    31,    84,
    84,   nil,    84,    84,    84,    84,    84,    84,    84,   nil,
    84,    84,   nil,    84,    31,   nil,   nil,   102,   nil,   102,
   102,   102,   102,   102,   102,   102,   102,   102,   102,    84,
   102,   102,     4,   102,     4,     4,     4,     4,     4,     4,
     4,     4,     4,     4,     4,     4,   nil,   nil,   102,   102,
    81,   nil,    81,    81,    81,    81,    81,    81,    81,    81,
    81,    81,   nil,    81,    81,    92,    81,    92,    92,    92,
    92,    92,    92,    92,    92,    92,    92,    92,    92,   nil,
   nil,    81,    81,    35,   nil,    35,    35,   nil,    35,    35,
    35,    35,    35,    35,    35,   nil,    35,    35,    36,    35,
    36,    36,   nil,    36,    36,    36,    36,    36,    36,    36,
   nil,    36,    36,   nil,    36,    35,   nil,   nil,    37,   nil,
    37,    37,   nil,    37,    37,    37,    37,    37,    37,    37,
    36,    37,    37,    38,    37,    38,    38,   nil,    38,    38,
    38,    38,    38,    38,    38,   nil,    38,    38,   nil,    38,
    37,   nil,   nil,    39,   nil,    39,    39,   nil,    39,    39,
    39,    39,    39,    39,    39,    38,    39,    39,    46,    39,
    46,    46,   nil,    46,    46,    46,    46,    46,    46,    46,
   nil,    46,    46,   nil,    46,    39,   nil,   nil,    41,   nil,
    41,    41,   nil,    41,    41,    41,    41,    41,    41,    41,
    46,    41,    41,    42,    41,    42,    42,   nil,    42,    42,
    42,    42,    42,    42,    42,   nil,    42,    42,   nil,    42,
    41,   nil,   nil,    43,   nil,    43,    43,   nil,    43,    43,
    43,    43,    43,    43,    43,    42,    43,    43,    44,    43,
    44,    44,   nil,    44,    44,    44,    44,    44,    44,    44,
   nil,    44,    44,   nil,    44,    43,   nil,   nil,    45,   nil,
    45,    45,   nil,    45,    45,    45,    45,    45,    45,    45,
    44,    45,    45,    40,    45,    40,    40,   nil,    40,    40,
    40,    40,    40,    40,    40,   nil,    40,    40,   nil,    40,
    45,   nil,    61,    54,    61,    61,    61,    61,    61,    61,
    61,    61,    61,    61,    54,    40,    54,    54,    54,    54,
    54,    54,    54,    54,    54,    54,    54,    54,    55,    62,
    54,    62,    62,    62,    62,    62,    62,    62,    62,    55,
   nil,    55,    55,    55,    55,    55,    55,    55,    55,    55,
    55,    55,    55,   nil,    47,    55,    47,    47,    47,    47,
    47,    47,    47,    47,    47,    47,    47,    47,   nil,   nil,
   nil,    73,    47,    73,    73,    73,    73,    73,    73,    73,
    73,    73,    73,    73,    73,    76,   nil,    76,    76,    76,
    76,    76,    76,    76,    76,    76,    76,    76,    76,    63,
   nil,    63,    63,    63,    63,    63,    63,    63,    63,    66,
   nil,    66,    66,    66,    66,    65,   nil,    65,    65,    65,
    65,    64,   nil,    64,    64,    64,    64,    67,   nil,    67,
    67,    67,    67 ]

racc_action_pointer = [
   149,   163,   nil,    30,   285,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    99,   nil,
   nil,   nil,   nil,   nil,    19,   134,   122,    73,   nil,   215,
   230,   250,    80,    13,    57,   351,   366,   386,   401,   421,
   541,   456,   471,   491,   506,   526,   436,   597,   nil,    -2,
   114,     2,   -30,    28,   557,   582,    68,   nil,   182,    79,
   152,   545,   572,   642,   664,   658,   652,   670,    45,    39,
   123,   111,   nil,   614,   nil,    20,   628,    21,    48,    33,
    66,   318,   nil,   nil,   265,   182,   nil,    70,   nil,   106,
    -2,   117,   318,   121,   nil,   125,   nil,   nil,    24,   nil,
   nil,   nil,   285,   152,   nil ]

racc_action_default = [
    -1,   -61,    -2,    -3,    -4,    -7,    -8,    -9,   -10,   -11,
   -12,   -13,   -14,   -15,   -16,   -17,   -18,   -19,   -61,   -21,
   -22,   -23,   -24,   -25,   -46,   -61,   -61,   -61,   -55,   -61,
   -61,   -59,   -61,    -6,   -61,   -61,   -61,   -61,   -61,   -61,
   -61,   -61,   -61,   -61,   -61,   -61,   -61,   -61,   -26,   -61,
   -61,   -45,   -49,   -61,   -61,   -61,   -60,   105,    -5,   -28,
   -33,   -34,   -35,   -36,   -37,   -38,   -39,   -40,   -41,   -42,
   -43,   -44,   -20,   -31,   -29,   -61,   -47,   -61,   -61,    -1,
    -1,    -1,   -27,   -30,   -61,    -1,   -50,   -61,   -52,   -61,
   -61,   -61,   -32,   -61,   -51,   -61,   -54,   -56,   -61,   -58,
   -48,   -53,    -1,   -61,   -57 ]

racc_goto_table = [
     1,    33,    47,    48,    75,    77,    87,   nil,   nil,    51,
   nil,   nil,   nil,    54,    55,    56,   nil,    58,   nil,    60,
    61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
    71,   nil,   nil,    73,    76,   nil,   nil,   nil,    82,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    79,    80,    81,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    92,   nil,
   nil,   nil,   nil,   nil,   nil,    85,   nil,   nil,   nil,    89,
    90,    91,   nil,   nil,   nil,    93,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   102,   nil,   nil,   nil,
   nil,   nil,   103 ]

racc_goto_check = [
     1,     2,     4,    16,    17,    18,    19,   nil,   nil,     4,
   nil,   nil,   nil,     4,     4,     4,   nil,     4,   nil,     4,
     4,     4,     4,     4,     4,     4,     4,     4,     4,     4,
     4,   nil,   nil,     4,     4,   nil,   nil,   nil,    16,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     2,     2,     2,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4,   nil,
   nil,   nil,   nil,   nil,   nil,     2,   nil,   nil,   nil,     1,
     1,     1,   nil,   nil,   nil,     1,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     2,   nil,   nil,   nil,
   nil,   nil,     1 ]

racc_goto_pointer = [
   nil,     0,    -2,   nil,   -16,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   -21,   -45,   -47,   -72 ]

racc_goto_default = [
   nil,   nil,     2,     3,     4,     7,     8,     9,    10,    11,
    12,    13,    14,    15,    16,    17,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 37, :_reduce_1,
  1, 37, :_reduce_2,
  1, 37, :_reduce_3,
  1, 39, :_reduce_4,
  3, 39, :_reduce_5,
  2, 39, :_reduce_6,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 40, :_reduce_none,
  1, 40, :_reduce_none,
  1, 40, :_reduce_none,
  1, 40, :_reduce_none,
  1, 40, :_reduce_none,
  1, 40, :_reduce_none,
  1, 40, :_reduce_none,
  1, 40, :_reduce_none,
  1, 40, :_reduce_none,
  1, 40, :_reduce_none,
  1, 40, :_reduce_none,
  3, 40, :_reduce_20,
  1, 41, :_reduce_21,
  1, 41, :_reduce_22,
  1, 41, :_reduce_23,
  1, 41, :_reduce_24,
  1, 41, :_reduce_25,
  2, 43, :_reduce_26,
  4, 43, :_reduce_27,
  3, 43, :_reduce_28,
  2, 52, :_reduce_29,
  3, 52, :_reduce_30,
  1, 53, :_reduce_31,
  3, 53, :_reduce_32,
  3, 44, :_reduce_33,
  3, 44, :_reduce_34,
  3, 44, :_reduce_35,
  3, 44, :_reduce_36,
  3, 44, :_reduce_37,
  3, 44, :_reduce_38,
  3, 44, :_reduce_39,
  3, 44, :_reduce_40,
  3, 44, :_reduce_41,
  3, 44, :_reduce_42,
  3, 44, :_reduce_43,
  3, 44, :_reduce_44,
  2, 44, :_reduce_45,
  1, 46, :_reduce_46,
  3, 47, :_reduce_47,
  6, 48, :_reduce_48,
  0, 54, :_reduce_49,
  2, 54, :_reduce_50,
  3, 54, :_reduce_51,
  1, 55, :_reduce_52,
  3, 55, :_reduce_53,
  5, 49, :_reduce_54,
  1, 45, :_reduce_55,
  5, 50, :_reduce_56,
  8, 50, :_reduce_57,
  5, 51, :_reduce_58,
  1, 42, :_reduce_59,
  2, 42, :_reduce_60 ]

racc_reduce_n = 61

racc_shift_n = 105

racc_token_table = {
  false => 0,
  :error => 1,
  :IF => 2,
  :ELSE => 3,
  :DEF => 4,
  :CLASS => 5,
  :NEWLINE => 6,
  :NUMBER => 7,
  :STRING => 8,
  :TRUE => 9,
  :FALSE => 10,
  :NIL => 11,
  :IDENTIFIER => 12,
  :CONSTANT => 13,
  :END => 14,
  :WHILE => 15,
  :RETURN => 16,
  "." => 17,
  "!" => 18,
  "*" => 19,
  "/" => 20,
  "+" => 21,
  "-" => 22,
  ">" => 23,
  ">=" => 24,
  "<" => 25,
  "<=" => 26,
  "==" => 27,
  "!=" => 28,
  "&&" => 29,
  "||" => 30,
  "=" => 31,
  "," => 32,
  ";" => 33,
  "(" => 34,
  ")" => 35 }

racc_nt_base = 36

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IF",
  "ELSE",
  "DEF",
  "CLASS",
  "NEWLINE",
  "NUMBER",
  "STRING",
  "TRUE",
  "FALSE",
  "NIL",
  "IDENTIFIER",
  "CONSTANT",
  "END",
  "WHILE",
  "RETURN",
  "\".\"",
  "\"!\"",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "\">\"",
  "\">=\"",
  "\"<\"",
  "\"<=\"",
  "\"==\"",
  "\"!=\"",
  "\"&&\"",
  "\"||\"",
  "\"=\"",
  "\",\"",
  "\";\"",
  "\"(\"",
  "\")\"",
  "$start",
  "Expressions",
  "Terminator",
  "ExpressionList",
  "Expression",
  "Literal",
  "Return",
  "Call",
  "Operator",
  "GetConstant",
  "GetLocal",
  "SetLocal",
  "Def",
  "Class",
  "If",
  "While",
  "Arguments",
  "ArgList",
  "Parameters",
  "ParamList" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'grammar.y', 48)
  def _reduce_1(val, _values, result)
     result = Nodes.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 49)
  def _reduce_2(val, _values, result)
     result = Nodes.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 50)
  def _reduce_3(val, _values, result)
     result = Nodes.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 54)
  def _reduce_4(val, _values, result)
     result = [ val[0] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 55)
  def _reduce_5(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 57)
  def _reduce_6(val, _values, result)
     result = val[0] 
    result
  end
.,.,

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

module_eval(<<'.,.,', 'grammar.y', 79)
  def _reduce_20(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 84)
  def _reduce_21(val, _values, result)
     result = NumberNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 85)
  def _reduce_22(val, _values, result)
     result = StringNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 86)
  def _reduce_23(val, _values, result)
     result = TrueNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 87)
  def _reduce_24(val, _values, result)
     result = FalseNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 88)
  def _reduce_25(val, _values, result)
     result = NilNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 94)
  def _reduce_26(val, _values, result)
     result = CallNode.new(nil, val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 97)
  def _reduce_27(val, _values, result)
     result = CallNode.new(val[0], val[2], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 99)
  def _reduce_28(val, _values, result)
     result = CallNode.new(val[0], val[2], []) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 103)
  def _reduce_29(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 104)
  def _reduce_30(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 108)
  def _reduce_31(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 109)
  def _reduce_32(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 115)
  def _reduce_33(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 116)
  def _reduce_34(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 117)
  def _reduce_35(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 118)
  def _reduce_36(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 119)
  def _reduce_37(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 120)
  def _reduce_38(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 121)
  def _reduce_39(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 122)
  def _reduce_40(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 125)
  def _reduce_41(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 126)
  def _reduce_42(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 127)
  def _reduce_43(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 128)
  def _reduce_44(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 130)
  def _reduce_45(val, _values, result)
     result = CallNode.new(val[1], val[0], []) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 135)
  def _reduce_46(val, _values, result)
     result = GetLocalNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 138)
  def _reduce_47(val, _values, result)
     result = SetLocalNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 145)
  def _reduce_48(val, _values, result)
     result = DefNode.new(val[1], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 149)
  def _reduce_49(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 150)
  def _reduce_50(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 151)
  def _reduce_51(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 155)
  def _reduce_52(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 156)
  def _reduce_53(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 163)
  def _reduce_54(val, _values, result)
     result = ClassNode.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 168)
  def _reduce_55(val, _values, result)
     result = GetConstantNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 174)
  def _reduce_56(val, _values, result)
     result = IfNode.new(val[1], val[3], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 179)
  def _reduce_57(val, _values, result)
     result = IfNode.new(val[1], val[3], val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 185)
  def _reduce_58(val, _values, result)
     result = WhileNode.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 189)
  def _reduce_59(val, _values, result)
     result = ReturnNode.new(nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 190)
  def _reduce_60(val, _values, result)
     result = ReturnNode.new(val[1]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
